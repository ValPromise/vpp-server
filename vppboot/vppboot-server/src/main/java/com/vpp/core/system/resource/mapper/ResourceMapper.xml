<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vpp.core.system.resource.mapper.ResourceMapper">
	<resultMap id="BaseResultMap" type="com.vpp.core.system.resource.bean.Resource">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="pid" property="pid" jdbcType="BIGINT" />
		<result column="seq" property="seq" jdbcType="TINYINT" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="resource_type" property="resourceType"
			jdbcType="TINYINT" />
		<result column="icon" property="icon" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, url, description, create_time, pid, seq, status,
		resource_type,
		icon
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from resource
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		resource
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.vpp.core.system.resource.bean.Resource">
		insert into resource (id,
		name, url,
		description, create_time, pid,
		seq, status, resource_type,
		icon)
		values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{pid,jdbcType=BIGINT},
		#{seq,jdbcType=TINYINT}, #{status,jdbcType=TINYINT},
		#{resourceType,jdbcType=TINYINT},
		#{icon,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.vpp.core.system.resource.bean.Resource">
		insert into resource
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="pid != null">
				pid,
			</if>
			<if test="seq != null">
				seq,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="resourceType != null">
				resource_type,
			</if>
			<if test="icon != null">
				icon,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=BIGINT},
			</if>
			<if test="seq != null">
				#{seq,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="resourceType != null">
				#{resourceType,jdbcType=TINYINT},
			</if>
			<if test="icon != null">
				#{icon,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.vpp.core.system.resource.bean.Resource">
		update resource
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=BIGINT},
			</if>
			<if test="seq != null">
				seq = #{seq,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="resourceType != null">
				resource_type = #{resourceType,jdbcType=TINYINT},
			</if>
			<if test="icon != null">
				icon = #{icon,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.vpp.core.system.resource.bean.Resource">
		update resource
		set name = #{name,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		pid = #{pid,jdbcType=BIGINT},
		seq =
		#{seq,jdbcType=TINYINT},
		status = #{status,jdbcType=TINYINT},
		resource_type = #{resourceType,jdbcType=TINYINT},
		icon =
		#{icon,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="findLimitByCond" resultMap="BaseResultMap">
		select * from resource
		where 1=1
		<if test="pid != null">
			and pid = #{pid}  
		</if>
		order by id desc 
	</select>
	
	<select id="findAll" resultMap="BaseResultMap">
		select * from resource
		where 1=1
		order by id desc
	</select>

	<select id="findListByRoleIds" resultType="com.vpp.core.system.resource.bean.Resource">
		select res.* from resource as res , role_resource as rr
		where res.id = rr.resource_id and rr.role_id in
		<foreach collection="list" item="roleId" index="index" open="("
			close=")" separator=",">
			#{roleId}
		</foreach>
	</select>
	
	<select id="findParentListByRoleIds" resultType="com.vpp.core.system.resource.bean.Resource">
		select res.* from resource as res , role_resource as rr
		where res.id = rr.resource_id and res.url != '' and rr.role_id in
		<foreach collection="list" item="roleId" index="index" open="("
			close=")" separator=",">
			#{roleId}
		</foreach>
	</select>
</mapper>