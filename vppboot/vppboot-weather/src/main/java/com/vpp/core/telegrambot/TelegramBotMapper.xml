<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vpp.core.telegrambot.TelegramBotMapper">
	<resultMap id="BaseResultMap" type="com.vpp.core.telegrambot.TelegramBot">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_wallet_url" property="userWalletUrl"
			jdbcType="VARCHAR" />
		<result column="user_wallet_public_key" property="userWalletPublicKey"
			jdbcType="VARCHAR" />
		<result column="telegram_user_id" property="telegramUserId"
			jdbcType="VARCHAR" />
		<result column="telegram_group_id" property="telegramGroupId"
			jdbcType="VARCHAR" />
		<result column="convert_code" property="convertCode" jdbcType="VARCHAR" />
		<result column="convert_amount" property="convertAmount"
			jdbcType="INTEGER" />
		<result column="from_convert_code" property="fromConvertCode"
			jdbcType="VARCHAR" />
		<result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result column="payment_convert_amount" property="paymentConvertAmount"
			jdbcType="INTEGER" />
		<result column="total_amount" property="totalAmount" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_wallet_url, user_wallet_public_key, telegram_user_id,
		telegram_group_id,
		convert_code, convert_amount, from_convert_code, gmt_create, gmt_modified,
		payment_convert_amount,
		total_amount
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from telegram_bot
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from telegram_bot
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.vpp.core.telegrambot.TelegramBot">
		insert into telegram_bot (id, user_wallet_url, user_wallet_public_key,
		telegram_user_id, telegram_group_id, convert_code,
		convert_amount, from_convert_code, gmt_create,
		gmt_modified, payment_convert_amount, total_amount
		)
		values (#{id,jdbcType=BIGINT}, #{userWalletUrl,jdbcType=VARCHAR},
		#{userWalletPublicKey,jdbcType=VARCHAR},
		#{telegramUserId,jdbcType=VARCHAR},
		#{telegramGroupId,jdbcType=VARCHAR}, #{convertCode,jdbcType=VARCHAR},
		#{convertAmount,jdbcType=REAL}, #{fromConvertCode,jdbcType=VARCHAR},
		#{gmtCreate,jdbcType=TIMESTAMP},
		#{gmtModified,jdbcType=TIMESTAMP}, #{paymentConvertAmount,jdbcType=REAL}, #{totalAmount,jdbcType=REAL}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.vpp.core.telegrambot.TelegramBot">
		insert into telegram_bot
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userWalletUrl != null">
				user_wallet_url,
			</if>
			<if test="userWalletPublicKey != null">
				user_wallet_public_key,
			</if>
			<if test="telegramUserId != null">
				telegram_user_id,
			</if>
			<if test="telegramGroupId != null">
				telegram_group_id,
			</if>
			<if test="convertCode != null">
				convert_code,
			</if>
			<if test="convertAmount != null">
				convert_amount,
			</if>
			<if test="fromConvertCode != null">
				from_convert_code,
			</if>
			<if test="gmtCreate != null">
				gmt_create,
			</if>
			<if test="gmtModified != null">
				gmt_modified,
			</if>
			<if test="paymentConvertAmount != null">
				payment_convert_amount,
			</if>
			<if test="totalAmount != null">
				total_amount,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userWalletUrl != null">
				#{userWalletUrl,jdbcType=VARCHAR},
			</if>
			<if test="userWalletPublicKey != null">
				#{userWalletPublicKey,jdbcType=VARCHAR},
			</if>
			<if test="telegramUserId != null">
				#{telegramUserId,jdbcType=VARCHAR},
			</if>
			<if test="telegramGroupId != null">
				#{telegramGroupId,jdbcType=VARCHAR},
			</if>
			<if test="convertCode != null">
				#{convertCode,jdbcType=VARCHAR},
			</if>
			<if test="convertAmount != null">
				#{convertAmount,jdbcType=REAL},
			</if>
			<if test="fromConvertCode != null">
				#{fromConvertCode,jdbcType=VARCHAR},
			</if>
			<if test="gmtCreate != null">
				#{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModified != null">
				#{gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="paymentConvertAmount != null">
				#{paymentConvertAmount,jdbcType=REAL},
			</if>
			<if test="totalAmount != null">
				#{totalAmount,jdbcType=REAL},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.vpp.core.telegrambot.TelegramBot">
		update telegram_bot
		<set>
			<if test="userWalletUrl != null">
				user_wallet_url = #{userWalletUrl,jdbcType=VARCHAR},
			</if>
			<if test="userWalletPublicKey != null">
				user_wallet_public_key = #{userWalletPublicKey,jdbcType=VARCHAR},
			</if>
			<if test="telegramUserId != null">
				telegram_user_id = #{telegramUserId,jdbcType=VARCHAR},
			</if>
			<if test="telegramGroupId != null">
				telegram_group_id = #{telegramGroupId,jdbcType=VARCHAR},
			</if>
			<if test="convertCode != null">
				convert_code = #{convertCode,jdbcType=VARCHAR},
			</if>
			<if test="convertAmount != null">
				convert_amount = #{convertAmount,jdbcType=REAL},
			</if>
			<if test="fromConvertCode != null">
				from_convert_code = #{fromConvertCode,jdbcType=VARCHAR},
			</if>
			<if test="gmtCreate != null">
				gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModified != null">
				gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="paymentConvertAmount != null">
				payment_convert_amount = #{paymentConvertAmount,jdbcType=REAL},
			</if>
			<if test="totalAmount != null">
				total_amount = #{totalAmount,jdbcType=REAL},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.vpp.core.telegrambot.TelegramBot">
		update telegram_bot
		set user_wallet_url = #{userWalletUrl,jdbcType=VARCHAR},
		user_wallet_public_key = #{userWalletPublicKey,jdbcType=VARCHAR},
		telegram_user_id = #{telegramUserId,jdbcType=VARCHAR},
		telegram_group_id = #{telegramGroupId,jdbcType=VARCHAR},
		convert_code = #{convertCode,jdbcType=VARCHAR},
		convert_amount = #{convertAmount,jdbcType=REAL},
		from_convert_code = #{fromConvertCode,jdbcType=VARCHAR},
		gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
		gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
		payment_convert_amount = #{paymentConvertAmount,jdbcType=REAL},
		total_amount = #{totalAmount,jdbcType=REAL}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getTelegramBotByKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select *
		from telegram_bot
		where convert_code = #{key}
	</select>
	<select id="getInviteUserCnt" parameterType="java.lang.String"
		resultType="int">
		select count(1) from telegram_bot
		where from_convert_code = #{convertCode} and convert_amount = 100  
	</select>
	<select id="selectUserIdCntByMap" parameterType="java.lang.String"
		resultType="int">
		select count(1) from telegram_bot
		where telegram_user_id = #{telegramUserId}
	</select>
	
</mapper>